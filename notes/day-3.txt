1. difference between where and having clause
   a. where clause is used to filter the records from the table based on the specified condition. Having clause is used to filter records from groups (created by GROUP BY clause) based on the spcified condition.
   b. Where clause can be used without group by clause. Having clause can't be used without group by clause.
   c. where clause can't contain any aggregate function. Having clause can contain aggregate function.
   d. where clause can be used with select, update and delete statements. Having clause is used only with select statement.

2. IN and BETWEEN keywords
3. joins - different types

4. PL/SQL:
	Procedural Language extensions for the Structured Query Language (PL/SQL).
	SQL: It's a database language both for querying and updating data in the RDBMS.
	PL/SQL adds many programming constructs to the SQL. It helps to overcome the limitations of SQL. It is very well readable.
	PL/SQL is an embeded language. It is part of Oracle database. It can't be used like any other stand-alone programming language like python, c, c++, c#, Java etc. It can be executed in a system where Oracle database is installed.

	architecture:
	a. when you try to execute the PL/SQL block, behind the scene an engine, named, PL/SQL engine takes care of compilation and execution of the PL/SQL block, in  collaboration with SQL engine. the PL part of the PL/SQL is compiled by Procedural Statement Executor of PL/SQL engine and the SQL part of the PL/SQL is compiled and executed by SQL statement executor. the PL/SQL engine converts the actual code into byte code and then that code gets executed.
   
	Sections in PL/SQL block:
		a. declaration section
		b. Executable section
		c. Exception-Handling section
   	Blocks:
		a. anonymous block: can't be saved in database as database object. 
		b. named block: stored procedure, triggers, functions etc. are named pl/sql blocks. they can be saved in database as database objects.

	data types in pl/sql:
	 - scalar type: single value:
		number, boolean, character, datetime
	 - composite type: multiple values (record, collection etc.)	

	Numeric data types:
		real numbers, integers and floating point numbers [NUMBER, BINARY_FLOAT, BINARY_DOUBLE => sql data types and PLS_INTEGER => pl/sql data type]
		PLS_INTEGER => pl/sql data type (32 bit integer)

		NUMBER => s/w arithmatic
		PLS_INTEGER => h/w arithmatic, faster compared to NUMBER
			- NATURAL (nonnegative) , NATIRALN (nonnegative with NOT NULL CONSTRAINT), POSITIVE (positive), POSITIVEN (positive with NOT NULL CONSTRAINT), SIGNTYPE (-1,0,1), SIMPLE_INTEGER (PLS_INTEGER with NOT NULL CONSTRAINT)

	Boolean: TRUE, FALSE, NULL.
	used in case of IF..THEN, CASE, LOOP, FOR LOOP, WHILE LOOP control flow structure
	should not/can't:
	 - assign a boolean value to a table column
	 - select the value from a table column into a boolean value
	 - use a boolean in a SQL function
	 - use boolean expression in SQL statement
	 - use boolean value in DBMS_OUTPUT.put_line() and DBMS_OUTPUT.put()


	character:
	alphanumeric text.
	sql data types that are used in PL/SQL: char, varchar2, long, raw, long raw, rowid, urowid
	char(n): fixed-length character data type (1-32767 bytes)
	varchar2(n): varying length character data (1-32767 bytes)

	datetime:
	date, timestamp, .....
	
	DATA TYPE		SYNONYMS
	NUMBER  => DEC, DECIMAL, DOUBLE PRECISION, FLOAT, INTEGER, INT, NUMERIC, REAL, SMALLINT
	CHAR 	=> CHARACTER, STRING
	VARCHAR2 => VARCHAR



	